name: Test Backend

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  test-backend:
    runs-on: ubuntu-latest
    env:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: app
      POSTGRES_SERVER: db
      POSTGRES_PORT: 5432
      PROJECT_NAME: fastapi
      FIRST_SUPERUSER: admin@gmail.com
      FIRST_SUPERUSER_PASSWORD: admin
      SMTP_TLS: True
      SMTP_PORT: 587
      SMTP_HOST: smtp.gmail.com
      EMAILS_FROM_EMAIL: test@gmail.com

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Create env file
        run: |
          cat << EOF > .env
          POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
          POSTGRES_USER=${POSTGRES_USER}
          POSTGRES_DB=${POSTGRES_DB}
          POSTGRES_SERVER=${POSTGRES_SERVER}
          POSTGRES_PORT=${POSTGRES_PORT}
          PROJECT_NAME=${PROJECT_NAME}
          FIRST_SUPERUSER=${FIRST_SUPERUSER}
          FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD}
          SMTP_TLS=${SMTP_TLS}
          SMTP_PORT=${SMTP_PORT}
          SMTP_HOST=${SMTP_HOST}
          EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
          EOF

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.4.15"
          enable-cache: true
          
      - run: docker compose down -v --remove-orphans
      
      - name: Start Database
        run: |
          docker compose up -d db
          echo "Waiting for PostgreSQL to be ready..."
          sleep 15
          
      - name: Start mailcatcher
        run: docker compose up -d mailcatcher
        
      - name: Migrate DB
        run: uv run bash scripts/prestart.sh
        working-directory: backend
        
      - name: Run tests
        run: uv run bash scripts/tests-start.sh "Coverage for ${{ github.sha }}"
        working-directory: backend
        
      - run: docker compose down -v --remove-orphans
      
      - name: Store coverage files
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: backend/htmlcov
          include-hidden-files: true
